{"version":3,"sources":["components/Container/styled.js","components/Container/Container.jsx","components/Header/styled.js","components/Header/Header.jsx","components/Section/styled.js","components/Section/Section.jsx","lib/currencies.js","components/Form/styled.js","components/Form/Select.jsx","components/Form/Form.jsx","components/Result.jsx","components/Footer/styled.js","components/Footer/Footer.jsx","components/Clock/Clock.jsx","components/Clock/useCurrentDate.js","lib/utils.js","App.js","serviceWorker.js","index.js"],"names":["Content","styled","main","Container","children","HeaderContent","header","HeaderTitle","h1","Header","title","SectionContent","section","SectionTitle","h2","SectionParagraph","p","date","css","Section","additionalParagraph","currencies","shortname","name","rate","FormContent","form","FormFieldset","fieldset","FormLegend","legend","FormLabel","label","FormParagraph","additionalInfo","FormInput","input","FormSelect","select","FormButton","button","Select","onSelectChange","currency","value","onChange","map","key","Form","calculateResult","calculateRate","useState","amount","setAmount","yourCurrency","setYourCurrency","finalCurrency","setFinalCurrency","startingRate","setStartingRate","finalRate","setFinalRate","useEffect","find","target","otherWidth","placeholder","step","type","onClick","event","preventDefault","Result","result","exchangeRate","sourceAmount","targetAmount","FooterContent","footer","FooterTitle","Footer","Clock","Date","setDate","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleString","undefined","weekday","month","day","hour","minute","second","formatedDate","App","setResult","setExchangeRate","toFixed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d877986a.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Content = styled.main`\r\n  max-width: 80%;\r\n  margin: 20px auto;\r\n  background-color: white;\r\n  border: 2px inset rgb(236 236 236);\r\n  box-shadow: 0px 0px 5px 2px #767171;\r\n`;","import React from \"react\";\r\nimport { Content } from './styled'\r\n\r\nexport const Container = ({ children }) => (\r\n  <Content>\r\n    {children}\r\n  </Content>\r\n);","import styled from 'styled-components';\r\n\r\nexport const HeaderContent = styled.header `\r\n  padding: 10px;\r\n  border-bottom: 6px solid rgb(236 236 236);\r\n`;\r\n\r\nexport const HeaderTitle = styled.h1 `\r\n  margin: 10px;\r\n  font-size: 30px;\r\n  text-align: center;\r\n`;","import React from \"react\";\r\nimport { HeaderContent, HeaderTitle } from './styled'\r\n\r\nexport const Header = ({ title }) => (\r\n  <HeaderContent>\r\n    <HeaderTitle>{title}</HeaderTitle>\r\n  </HeaderContent>\r\n);","import styled, { css } from 'styled-components';\r\n\r\nexport const SectionContent = styled.section`\r\n  padding: 10px;\r\n  border-bottom: 6px solid rgb(236 236 236);\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n  margin: 10px 20px;\r\n  font-size: 25px;\r\n`;\r\n\r\nexport const SectionParagraph = styled.p`\r\n  margin: 30px;\r\n  font-size: 20px;\r\n\r\n  ${({ date }) => date && css`\r\n  margin: 0 30px;\r\n  font-size: 15px;\r\n  font-family: monospace;\r\n  text-align: right;\r\n  `}\r\n`;","import React from \"react\";\r\nimport { SectionContent, SectionTitle } from './styled';\r\n\r\nexport const Section = ({ title, children, additionalParagraph }) => (\r\n  <SectionContent>\r\n    <SectionTitle>{title}</SectionTitle>\r\n    <div>{additionalParagraph}</div>\r\n    <div>{children}</div>\r\n  </SectionContent>\r\n);","export const currencies = [\r\n  {\r\n    shortname: \"PLN\",\r\n    name: \"Złoty\",\r\n    rate: 1,\r\n  },\r\n  {\r\n    shortname: \"EUR\",\r\n    name: \"Euro\",\r\n    rate: 4.4090,\r\n  },\r\n  {\r\n    shortname: \"GBP\",\r\n    name: \"Funt brytyjski\",\r\n    rate: 4.8761,\r\n  },\r\n  {\r\n    shortname: \"USD\",\r\n    name: \"Dolar ameryksański\",\r\n    rate: 3.7549,\r\n  }\r\n];","import styled, { css } from 'styled-components';\r\n\r\nexport const FormContent = styled.form`\r\n  margin: 10px;\r\n  overflow-x: scroll;\r\n`;\r\n\r\nexport const FormFieldset = styled.fieldset`\r\n  margin: 10px;\r\n  padding: 5px;\r\n  border: 2px inset rgb(236 236 236);\r\n`;\r\n\r\nexport const FormLegend = styled.legend`\r\n  margin: 10px;\r\n  padding: 5px;\r\n  font-size: 18px;\r\n  border: 2px outset rgb(236 236 236);\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FormParagraph = styled.p`\r\n  margin: 10px;\r\n  font-size: 18px;\r\n  min-width: 50%;\r\n\r\n  ${({ additionalInfo }) => additionalInfo && css`\r\n    margin: 20px 30px 0px;\r\n    font-weight: bold;\r\n    font-style: italic;\r\n  `}\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  margin: 10px;\r\n  padding: 5px;\r\n  flex-grow: 1;\r\n  flex-shrink: 0;\r\n  min-width: 230px;\r\n  font-size: 18px;\r\n  min-width: 240px;\r\n`;\r\n\r\nexport const FormSelect = styled.select`\r\n  margin: 10px;\r\n  padding: 5px;\r\n  flex-grow: 1;\r\n  flex-shrink: 0;\r\n  min-width: 230px;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  margin: 10px;\r\n  padding: 5px;\r\n  float: right;\r\n  font-size: 18px;\r\n  background-color: white;\r\n\r\n  &:hover {\r\n    background-color: rgb(236 236 236);\r\n  }\r\n`;","import React from \"react\";\r\nimport { currencies } from \"../../lib/currencies\";\r\nimport { FormLabel, FormParagraph, FormSelect } from './styled';\r\n\r\nexport const Select = ({ title, onSelectChange, currency }) => {\r\n  return (\r\n    <FormLabel>\r\n      <FormParagraph>{title}</FormParagraph>\r\n      <FormSelect\r\n        value={currency}\r\n        onChange={onSelectChange}\r\n      >\r\n        {currencies.map((({ shortname, name }) => (\r\n          <option\r\n            key={shortname}\r\n            value={shortname}\r\n          >\r\n            {name}\r\n          </option>\r\n        )))}\r\n      </FormSelect>\r\n    </FormLabel>\r\n  );\r\n};\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Select } from \"./Select\";\r\nimport { FormContent, FormFieldset, FormLegend, FormLabel, FormParagraph, FormInput, FormButton } from './styled';\r\nimport { currencies } from \"../../lib/currencies\";\r\n\r\nexport const Form = ({ calculateResult, calculateRate }) => {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [yourCurrency, setYourCurrency] = useState(currencies[1].shortname);\r\n  const [finalCurrency, setFinalCurrency] = useState(currencies[2].shortname);\r\n  const [startingRate, setStartingRate] = useState();\r\n  const [finalRate, setFinalRate] = useState();\r\n\r\n  useEffect(() => {\r\n    setStartingRate(currencies.find(({ shortname }) => shortname === yourCurrency).rate);\r\n    setFinalRate(currencies.find(({ shortname }) => shortname === finalCurrency).rate);\r\n  }, [yourCurrency, finalCurrency]);\r\n\r\n  const onTransactionFormClick = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(startingRate, finalRate, yourCurrency, finalCurrency, amount);\r\n    setAmount(\"\")\r\n  }\r\n\r\n  const onExchangeRateFormClick = (event) => {\r\n    event.preventDefault();\r\n    calculateRate(startingRate, finalRate, yourCurrency, finalCurrency);\r\n  };\r\n\r\n  return (\r\n    <FormContent>\r\n      <FormFieldset>\r\n        <FormLegend>Dokonaj transakcji</FormLegend>\r\n        <Select\r\n          title=\"Wybierz walutę, którą chcesz wymienić:\"\r\n          onSelectChange={({ target }) => setYourCurrency(target.value)}\r\n          currency={yourCurrency}\r\n        />\r\n        <Select\r\n          title=\"Wybierz walutę, którą chcesz otrzymać:\"\r\n          onSelectChange={({ target }) => setFinalCurrency(target.value)}\r\n          currency={finalCurrency}\r\n        />\r\n        <FormLabel>\r\n          <FormParagraph>Wpisz kwotę którą dysponujesz: </FormParagraph>\r\n          <FormInput\r\n            otherWidth\r\n            name=\"amount\"\r\n            placeholder=\"100.00\"\r\n            step=\"0.01\"\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={({ target }) => setAmount(target.value)}\r\n          />\r\n        </FormLabel>\r\n        <FormButton onClick={onExchangeRateFormClick} >Sprawdź kurs</FormButton>\r\n        <FormButton onClick={onTransactionFormClick} >Dokonaj transakcji</FormButton>\r\n      </FormFieldset>\r\n      <FormParagraph additionalInfo>\r\n        Aby dokonać transakcji uzupełnij pole z kwotą.\r\n        </FormParagraph>\r\n    </FormContent>\r\n  );\r\n};","import React from \"react\";\r\nimport { SectionParagraph } from './Section/styled';\r\n\r\nexport const Result = ({ result, exchangeRate }) => {\r\n  return (\r\n    <>\r\n      <SectionParagraph>\r\n        {exchangeRate ?\r\n          `Za 1.00 ${exchangeRate.yourCurrency} dostaniesz u nas\r\n           ${exchangeRate.calculateRate} ${exchangeRate.finalCurrency}\r\n           Zapraszamy do dokonania transakcji!`\r\n          : \"\"\r\n        }\r\n      </SectionParagraph>\r\n      <SectionParagraph>\r\n        {result && result.sourceAmount > 0 ?\r\n          `Dziękujemy za transakcję! \r\n           Twoje ${result.sourceAmount} ${result.yourCurrency} zostało sprzedane.\r\n           Oczekuj wpływu na konto w wysokości ${result.targetAmount} ${result.finalCurrency}`\r\n          : \"\"\r\n        }\r\n      </SectionParagraph>\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const FooterContent = styled.footer`\r\n  padding: 10px 30px;\r\n`;\r\n\r\nexport const FooterTitle = styled.h2`\r\n  font-size: 25px;\r\n`;","import React from \"react\";\r\nimport { FooterContent, FooterTitle } from './styled';\r\n\r\nexport const Footer = ({ title }) => (\r\n  <FooterContent>\r\n    <FooterTitle>\r\n      {title}\r\n    </FooterTitle>\r\n    <p>\r\n      W przypadku jakichkolwiek pytań, proszę o kontakt na wskazany adres\r\n     </p>\r\n    <address>\r\n      Internetowy Kantor Sp. z o.o.<br />\r\n      interntowy@kantor.pl<br />\r\n      12-345-67-89\r\n    </address>\r\n    <p>\r\n      Kursy, które stosujemy w naszym kantorze oparte są na kursie pobranym ze strony NBP zwiększonym o naszą marżę.\r\n    </p>\r\n  </FooterContent>\r\n);","import React from 'react';\r\nimport { SectionParagraph } from '../Section/styled';\r\nimport { useCurrentDate } from './useCurrentDate';\r\nimport { formatedDate } from '../../lib/utils';\r\n\r\nexport const Clock = () => {\r\n  const date = useCurrentDate();\r\n\r\n  return (\r\n    <SectionParagraph date>\r\n      Dzisiaj jest {\" \"} {formatedDate(date)}\r\n    </SectionParagraph>\r\n  );\r\n};\r\n\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport const useCurrentDate = () => {\r\n  const [date, setDate] = useState(new Date())\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  return date;\r\n};\r\n\r\n","export const formatedDate = (date) => date.toLocaleString(undefined, {\r\n  weekday: \"long\",\r\n  month: \"long\",\r\n  day: \"numeric\",\r\n  hour: \"numeric\",\r\n  minute: \"numeric\",\r\n  second: \"numeric\"\r\n});","import React, { useState } from 'react';\r\nimport { Container } from \"./components/Container\";\r\nimport { Header } from \"./components/Header\";\r\nimport { Section } from \"./components/Section\";\r\nimport { Form } from \"./components/Form\";\r\nimport { Result } from \"./components/Result\";\r\nimport { Footer } from \"./components/Footer\";\r\nimport { Clock } from \"./components/Clock\";\r\n\r\nfunction App() {\r\n  const [result, setResult] = useState();\r\n  const [exchangeRate, setExchangeRate] = useState();\r\n\r\n  const calculateResult = (startingRate, finalRate, yourCurrency, finalCurrency, amount) => {\r\n    setResult({\r\n      sourceAmount: (+amount).toFixed(2),\r\n      targetAmount: (amount * (startingRate / finalRate)).toFixed(2),\r\n      yourCurrency,\r\n      finalCurrency\r\n    });\r\n  };\r\n\r\n  const calculateRate = (startingRate, finalRate, yourCurrency, finalCurrency) => {\r\n    setExchangeRate({\r\n      calculateRate: (startingRate / finalRate).toFixed(2),\r\n      yourCurrency,\r\n      finalCurrency\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Internetowy kantor\" />\r\n      <Section\r\n        title=\"Wprowadź dane:\"\r\n        additionalParagraph={<Clock />}\r\n      >\r\n        <Form\r\n          calculateResult={calculateResult}\r\n          calculateRate={calculateRate}\r\n        />\r\n      </Section>\r\n      <Section title=\"Wynik:\">\r\n        <Result\r\n          result={result}\r\n          exchangeRate={exchangeRate}\r\n        />\r\n      </Section>\r\n      <Footer title=\"Kontakt:\" />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}