{"version":3,"sources":["components/Container/Container.jsx","components/Header/Header.jsx","components/Section/Section.jsx","lib/currencies.js","components/Form/Select.jsx","components/Form/Form.jsx","components/Result.jsx","components/Footer/Footer.jsx","components/Clock.jsx","App.js","serviceWorker.js","index.js"],"names":["Container","children","className","Header","title","Section","additionalParagraph","currencies","shortname","name","rate","Select","onSelectChange","currency","value","onChange","map","key","Form","calculateResult","calculateRate","useState","amount","setAmount","yourCurrency","setYourCurrency","finalCurrency","setFinalCurrency","startingRate","setStartingRate","finalRate","setFinalRate","useEffect","find","target","placeholder","step","type","onClick","event","preventDefault","Result","result","exchangeRate","sourceAmount","targetAmount","Footer","Clock","Date","date","setDate","intervalId","setInterval","clearInterval","toLocaleString","undefined","weekday","month","day","hour","minute","second","formatedDate","App","setResult","setExchangeRate","toFixed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.55e43758.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport const Container = ({ children }) => (\r\n  <main className=\"container\">\r\n    {children}\r\n  </main>\r\n);","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nexport const Header = ({ title }) => (\r\n  <header className=\"header\">\r\n    <h1 className=\"header__title\">{title}</h1>\r\n  </header>\r\n);","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nexport const Section = ({ title, children, additionalParagraph }) => (\r\n  <section className=\"section\">\r\n    <h2 className=\"section__title\">{title}</h2>\r\n    <div>{additionalParagraph}</div>\r\n    <div>{children}</div>\r\n  </section>\r\n);","export const currencies = [\r\n  {\r\n    shortname: \"PLN\",\r\n    name: \"Złoty\",\r\n    rate: 1,\r\n  },\r\n  {\r\n    shortname: \"EUR\",\r\n    name: \"Euro\",\r\n    rate: 4.4090,\r\n  },\r\n  {\r\n    shortname: \"GBP\",\r\n    name: \"Funt brytyjski\",\r\n    rate: 4.8761,\r\n  },\r\n  {\r\n    shortname: \"USD\",\r\n    name: \"Dolar ameryksański\",\r\n    rate: 3.7549,\r\n  }\r\n];","import React from \"react\";\r\nimport { currencies } from \"../../lib/currencies\"\r\n\r\nexport const Select = ({ title, onSelectChange, currency }) => {\r\n  return (\r\n    <label className=\"form__label\">\r\n      <p className=\"form__paragraph\">{title}</p>\r\n      <select\r\n        className=\"form__field\"\r\n        value={currency}\r\n        onChange={onSelectChange}\r\n      >\r\n        {currencies.map((({ shortname, name }) => (\r\n          <option\r\n            key={shortname}\r\n            value={shortname}\r\n          >\r\n            {name}\r\n          </option>\r\n        )))}\r\n      </select>\r\n    </label>\r\n  );\r\n};\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Select } from \"./Select\";\r\nimport \"./style.css\";\r\nimport { currencies } from \"../../lib/currencies\";\r\n\r\nexport const Form = ({ calculateResult, calculateRate }) => {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [yourCurrency, setYourCurrency] = useState(currencies[1].shortname);\r\n  const [finalCurrency, setFinalCurrency] = useState(currencies[2].shortname);\r\n  const [startingRate, setStartingRate] = useState();\r\n  const [finalRate, setFinalRate] = useState();\r\n\r\n  useEffect(() => {\r\n    setStartingRate(currencies.find(({ shortname }) => shortname === yourCurrency).rate);\r\n    setFinalRate(currencies.find(({ shortname }) => shortname === finalCurrency).rate);\r\n  }, [yourCurrency, finalCurrency]);\r\n\r\n  const onTransactionFormClick = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(startingRate, finalRate, yourCurrency, finalCurrency, amount);\r\n    setAmount(\"\")\r\n  }\r\n\r\n  const onExchangeRateFormClick = (event) => {\r\n    event.preventDefault();\r\n    calculateRate(startingRate, finalRate, yourCurrency, finalCurrency);\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\">\r\n      <fieldset className=\"form__fieldset\">\r\n        <legend className=\"form__legend\">Dokonaj transakcji</legend>\r\n        <Select\r\n          title=\"Wybierz walutę, którą chcesz wymienić:\"\r\n          onSelectChange={({ target }) => setYourCurrency(target.value)}\r\n          currency={yourCurrency}\r\n        />\r\n        <Select\r\n          title=\"Wybierz walutę, którą chcesz otrzymać:\"\r\n          onSelectChange={({ target }) => setFinalCurrency(target.value)}\r\n          currency={finalCurrency}\r\n        />\r\n        <label className=\"form__label\">\r\n          <p className=\"form__paragraph\">Wpisz kwotę którą dysponujesz: </p>\r\n          <input\r\n            className=\"form__field form__field--otherWidth\"\r\n            name=\"amount\"\r\n            placeholder=\"100.00\"\r\n            step=\"0.01\"\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={({ target }) => setAmount(target.value)}\r\n          />\r\n        </label>\r\n        <button onClick={onExchangeRateFormClick} className=\"form__button\">Sprawdź kurs</button>\r\n        <button onClick={onTransactionFormClick} className=\"form__button\">Dokonaj transakcji</button>\r\n      </fieldset>\r\n      <p className=\"form__paragraph form__paragraph--additionalInfo\">Aby dokonać transakcji uzupełnij pole z kwotą.</p>\r\n    </form>\r\n  );\r\n};","import React from \"react\";\r\n\r\nexport const Result = ({ result, exchangeRate }) => {\r\n  return (\r\n    <>\r\n      <p className=\"section__paragraph\">\r\n        {exchangeRate ?\r\n          `Za 1.00 ${exchangeRate.yourCurrency} dostaniesz u nas\r\n           ${exchangeRate.calculateRate} ${exchangeRate.finalCurrency}\r\n           Zapraszamy do dokonania transakcji!`\r\n          : \"\"\r\n        }\r\n      </p>\r\n      <p className=\"section__paragraph\">\r\n        {result && result.sourceAmount > 0 ?\r\n          `Dziękujemy za transakcję! \r\n           Twoje ${result.sourceAmount} ${result.yourCurrency} zostało sprzedane.\r\n           Oczekuj wpływu na konto w wysokości ${result.targetAmount} ${result.finalCurrency}`\r\n          : \"\"\r\n        }\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport const Footer = ({ title }) => (\r\n  <footer className=\"footer\">\r\n    <h2 className=\"footer__title\">{title}</h2>\r\n    <p className=\"footer__paragraph\">\r\n      W przypadku jakichkolwiek pytań, proszę o kontakt na wskazany adres\r\n      </p>\r\n    <address>Internetowy Kantor Sp. z o.o.<br />\r\n    interntowy@kantor.pl<br />\r\n    12-345-67-89\r\n    </address>\r\n    <p className=\"footer__paragraph\">\r\n      Kursy, które stosujemy w naszym kantorze oparte są na kursie pobranym ze strony NBP zwiększonym o naszą marżę.\r\n      </p>\r\n  </footer>\r\n);","import React, { useState, useEffect } from 'react';\r\n\r\nexport const Clock = () => {\r\n  const [date, setDate] = useState(new Date())\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  const formatedDate = (date) => date.toLocaleString(undefined, {\r\n    weekday: \"long\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    second: \"numeric\"\r\n  })\r\n\r\n  return (\r\n    <p className=\"section__paragraph section__paragraph--date\">\r\n      Dzisiaj jest {\" \"} {formatedDate(date)}\r\n    </p>\r\n  );\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { Container } from \"./components/Container\";\r\nimport { Header } from \"./components/Header\";\r\nimport { Section } from \"./components/Section\";\r\nimport { Form } from \"./components/Form\";\r\nimport { Result } from \"./components/Result\";\r\nimport { Footer } from \"./components/Footer\";\r\nimport { Clock } from \"./components/Clock\";\r\n\r\nfunction App() {\r\n  const [result, setResult] = useState();\r\n  const [exchangeRate, setExchangeRate] = useState();\r\n\r\n  const calculateResult = (startingRate, finalRate, yourCurrency, finalCurrency, amount) => {\r\n    setResult({\r\n      sourceAmount: (+amount).toFixed(2),\r\n      targetAmount: (amount * (startingRate / finalRate)).toFixed(2),\r\n      yourCurrency,\r\n      finalCurrency\r\n    });\r\n  };\r\n\r\n  const calculateRate = (startingRate, finalRate, yourCurrency, finalCurrency) => {\r\n    setExchangeRate({\r\n      calculateRate: (startingRate / finalRate).toFixed(2),\r\n      yourCurrency,\r\n      finalCurrency\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Internetowy kantor\" />\r\n      <Section\r\n        title=\"Wprowadź dane:\"\r\n        additionalParagraph={<Clock />}\r\n      >\r\n        <Form\r\n          calculateResult={calculateResult}\r\n          calculateRate={calculateRate}\r\n        />\r\n      </Section>\r\n      <Section title=\"Wynik:\">\r\n        <Result\r\n          result={result}\r\n          exchangeRate={exchangeRate}\r\n        />\r\n      </Section>\r\n      <Footer title=\"Kontakt:\" />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}