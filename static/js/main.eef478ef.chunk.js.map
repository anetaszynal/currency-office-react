{"version":3,"sources":["components/Container/styled.js","components/Container/Container.jsx","components/Header/styled.js","components/Header/Header.jsx","components/Section/styled.js","components/Section/Section.jsx","components/Form/styled.js","components/Form/Select.jsx","components/Form/Form.jsx","components/Styles/styled.js","components/Result/Result.jsx","components/Footer/styled.js","components/Footer/Footer.jsx","components/Clock/Clock.jsx","components/Clock/useCurrentDate.js","lib/utils.js","App.js","lib/useCurrencies.js","serviceWorker.js","index.js"],"names":["Content","styled","main","Container","children","HeaderContent","header","HeaderTitle","h1","Header","title","SectionContent","section","SectionTitle","h2","Section","additionalParagraph","FormContainer","form","FormFieldset","fieldset","FormLegend","legend","FormLabel","label","FormParagraph","p","additionalInfo","css","FormField","input","FormButton","button","Select","currenciesData","currency","onSelectChange","as","value","onChange","Object","keys","rates","map","rate","index","key","Form","calculateResult","calculateRate","useState","amount","setAmount","yourCurrency","setYourCurrency","finalCurrency","setFinalCurrency","target","otherWidth","name","placeholder","step","type","onClick","event","preventDefault","console","log","Paragraph","date","Result","result","exchangeRate","sourceAmount","targetAmount","FooterContent","footer","FooterTitle","Footer","Clock","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleString","undefined","weekday","month","day","hour","minute","second","formatDate","App","setCurrenciesData","a","fetch","response","ok","Error","statusText","json","getCurrencies","error","useCurrencies","setResult","setExchangeRate","startingRate","finalRate","toFixed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.eef478ef.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Content = styled.main`\r\n  max-width: 80%;\r\n  margin: 20px auto;\r\n  background-color: white;\r\n  border: 2px inset rgb(236 236 236);\r\n  box-shadow: 0px 0px 5px 2px #767171;\r\n`;","import React from \"react\";\r\nimport { Content } from './styled'\r\n\r\nexport const Container = ({ children }) => (\r\n  <Content>\r\n    {children}\r\n  </Content>\r\n);","import styled from 'styled-components';\r\n\r\nexport const HeaderContent = styled.header `\r\n  padding: 10px;\r\n  border-bottom: 6px solid rgb(236 236 236);\r\n`;\r\n\r\nexport const HeaderTitle = styled.h1 `\r\n  margin: 10px;\r\n  font-size: 30px;\r\n  text-align: center;\r\n`;","import React from \"react\";\r\nimport { HeaderContent, HeaderTitle } from './styled'\r\n\r\nexport const Header = ({ title }) => (\r\n  <HeaderContent>\r\n    <HeaderTitle>{title}</HeaderTitle>\r\n  </HeaderContent>\r\n);","import styled from 'styled-components';\r\n\r\nexport const SectionContent = styled.section`\r\n  padding: 10px;\r\n  border-bottom: 6px solid rgb(236 236 236);\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n  margin: 10px 20px;\r\n  font-size: 25px;\r\n`;\r\n","import React from \"react\";\r\nimport { SectionContent, SectionTitle } from './styled';\r\n\r\nexport const Section = ({ title, children, additionalParagraph }) => (\r\n  <SectionContent>\r\n    <SectionTitle>{title}</SectionTitle>\r\n    <div>{additionalParagraph}</div>\r\n    <div>{children}</div>\r\n  </SectionContent>\r\n);","import styled, { css } from 'styled-components';\r\n\r\nexport const FormContainer = styled.form`\r\n  margin: 10px;\r\n  overflow-x: scroll;\r\n`;\r\n\r\nexport const FormFieldset = styled.fieldset`\r\n  margin: 10px;\r\n  padding: 5px;\r\n  border: 2px inset rgb(236 236 236);\r\n`;\r\n\r\nexport const FormLegend = styled.legend`\r\n  margin: 10px;\r\n  padding: 5px;\r\n  font-size: 18px;\r\n  border: 2px outset rgb(236 236 236);\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FormParagraph = styled.p`\r\n  margin: 10px;\r\n  font-size: 18px;\r\n  min-width: 50%;\r\n\r\n  ${({ additionalInfo }) => additionalInfo && css`\r\n    margin: 20px 30px 0px;\r\n    font-weight: bold;\r\n    font-style: italic;\r\n  `}\r\n`;\r\n\r\nexport const FormField = styled.input`\r\n  margin: 10px;\r\n  padding: 5px;\r\n  flex-grow: 1;\r\n  flex-shrink: 0;\r\n  min-width: 230px;\r\n  font-size: 18px;\r\n  min-width: 240px;\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  margin: 10px;\r\n  padding: 5px;\r\n  float: right;\r\n  font-size: 18px;\r\n  background-color: white;\r\n\r\n  &:hover {\r\n    background-color: rgb(236 236 236);\r\n  }\r\n`;","import React from \"react\";\r\nimport { FormLabel, FormParagraph, FormField } from \"./styled\";\r\n\r\nexport const Select = ({ title, currenciesData, currency, onSelectChange }) => {\r\n  return (\r\n    <FormLabel>\r\n      <FormParagraph>{title}</FormParagraph>\r\n      <FormField as=\"select\" value={currency} onChange={onSelectChange}>\r\n        {currenciesData &&\r\n          Object.keys(currenciesData.rates).map((rate, index) => (\r\n            <option key={index}>{rate}</option>\r\n          ))}\r\n      </FormField>\r\n    </FormLabel>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Select } from \"./Select\";\r\nimport {\r\n  FormContainer,\r\n  FormFieldset,\r\n  FormLegend,\r\n  FormLabel,\r\n  FormParagraph,\r\n  FormField,\r\n  FormButton,\r\n} from \"./styled\";\r\n\r\nexport const Form = ({ currenciesData, calculateResult, calculateRate }) => {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [yourCurrency, setYourCurrency] = useState(\"EUR\");\r\n  const [finalCurrency, setFinalCurrency] = useState(\"PLN\");\r\n\r\n  const onTransactionButtonClick = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(yourCurrency, finalCurrency, amount);\r\n    setAmount(\"\");\r\n  };\r\n\r\n  const onExchangeRateButtonClick = (event) => {\r\n    event.preventDefault();\r\n    calculateRate(yourCurrency, finalCurrency);\r\n    console.log(currenciesData);\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <FormFieldset>\r\n        <FormLegend>Dokonaj transakcji</FormLegend>\r\n        <Select\r\n          title=\"Wybierz walutę, którą chcesz wymienić:\"\r\n          onSelectChange={({ target }) => setYourCurrency(target.value)}\r\n          currency={yourCurrency}\r\n          currenciesData={currenciesData}\r\n        />\r\n        <Select\r\n          title=\"Wybierz walutę, którą chcesz otrzymać:\"\r\n          onSelectChange={({ target }) => setFinalCurrency(target.value)}\r\n          currency={finalCurrency}\r\n          currenciesData={currenciesData}\r\n        />\r\n        <FormLabel>\r\n          <FormParagraph>Wpisz kwotę którą dysponujesz: </FormParagraph>\r\n          <FormField\r\n            otherWidth\r\n            name=\"amount\"\r\n            placeholder=\"100.00\"\r\n            step=\"0.01\"\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={({ target }) => setAmount(target.value)}\r\n          />\r\n        </FormLabel>\r\n        <FormButton onClick={onExchangeRateButtonClick}>\r\n          Sprawdź kurs\r\n        </FormButton>\r\n        <FormButton onClick={onTransactionButtonClick}>\r\n          Dokonaj transakcji\r\n        </FormButton>\r\n      </FormFieldset>\r\n      <FormParagraph additionalInfo>\r\n        Aby dokonać transakcji uzupełnij pole z kwotą.\r\n      </FormParagraph>\r\n    </FormContainer>\r\n  );\r\n};\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const Paragraph = styled.p`\r\nmargin: 30px;\r\nfont-size: 20px;\r\n\r\n${({ date }) => date && css`\r\nmargin: 0 30px;\r\nfont-size: 15px;\r\nfont-family: monospace;\r\ntext-align: right;\r\n`}\r\n`;","import React from \"react\";\r\nimport { Paragraph } from \"../Styles/styled\";\r\n\r\nexport const Result = ({ result, exchangeRate, currenciesData }) => {\r\n  return (\r\n    <>\r\n      {!currenciesData && (\r\n        <Paragraph>\r\n          Proszę czekać... Trwa pobieranie aktualnych kursów walut.{\" \"}\r\n        </Paragraph>\r\n      )}\r\n      {currenciesData === \"error\" && (\r\n        <Paragraph>\r\n          Przepraszamy, nie udało pobrać się kursów walut. Proszę sprawdzić\r\n          połączenie z internetem.\r\n        </Paragraph>\r\n      )}\r\n      {currenciesData && (\r\n        <>\r\n          <Paragraph>\r\n            {exchangeRate\r\n              ? `Za 1.00 ${exchangeRate.yourCurrency} dostaniesz u nas\r\n           ${exchangeRate.calculateRate} ${exchangeRate.finalCurrency}\r\n           Zapraszamy do dokonania transakcji!`\r\n              : \"\"}\r\n          </Paragraph>\r\n          <Paragraph>\r\n            {result && result.sourceAmount > 0\r\n              ? `Dziękujemy za transakcję!\r\n           Twoje ${result.sourceAmount} ${result.yourCurrency} zostało sprzedane.\r\n           Oczekuj wpływu na konto w wysokości ${result.targetAmount} ${result.finalCurrency}`\r\n              : \"\"}\r\n          </Paragraph>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const FooterContent = styled.footer`\r\n  padding: 10px 30px;\r\n`;\r\n\r\nexport const FooterTitle = styled.h2`\r\n  font-size: 25px;\r\n`;","import React from \"react\";\r\nimport { FooterContent, FooterTitle } from \"./styled\";\r\n\r\nexport const Footer = ({ title, currenciesData }) => (\r\n  <FooterContent>\r\n    <FooterTitle>{title}</FooterTitle>\r\n    <p>W przypadku jakichkolwiek pytań, proszę o kontakt na wskazany adres</p>\r\n    <address>\r\n      Internetowy Kantor Sp. z o.o.\r\n      <br />\r\n      interntowy@kantor.pl\r\n      <br />\r\n      12-345-67-89\r\n    </address>\r\n    {currenciesData && (\r\n      <p>\r\n        Kursy, które stosujemy w naszym kantorze pobrane są z Europejskiego\r\n        Banku Centralnego. Aktualne na dzień {currenciesData.date}.\r\n      </p>\r\n    )}\r\n  </FooterContent>\r\n);\r\n","import React from 'react';\r\nimport { useCurrentDate } from './useCurrentDate';\r\nimport { formatDate } from '../../lib/utils';\r\nimport { Paragraph } from '../Styles/styled';\r\n\r\nexport const Clock = () => {\r\n  const date = useCurrentDate();\r\n\r\n  return (\r\n    <Paragraph date>\r\n      Dzisiaj jest {\" \"} {formatDate(date)}\r\n    </Paragraph>\r\n  );\r\n};\r\n\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport const useCurrentDate = () => {\r\n  const [date, setDate] = useState(new Date())\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  return date;\r\n};\r\n\r\n","export const formatDate = (date) => date.toLocaleString(undefined, {\r\n  weekday: \"long\",\r\n  month: \"long\",\r\n  day: \"numeric\",\r\n  hour: \"numeric\",\r\n  minute: \"numeric\",\r\n  second: \"numeric\"\r\n});","import React, { useState } from \"react\";\r\nimport { Container } from \"./components/Container\";\r\nimport { Header } from \"./components/Header\";\r\nimport { Section } from \"./components/Section\";\r\nimport { Form } from \"./components/Form\";\r\nimport { Result } from \"./components/Result\";\r\nimport { Footer } from \"./components/Footer\";\r\nimport { Clock } from \"./components/Clock\";\r\nimport { useCurrencies } from \"./lib/useCurrencies\";\r\n\r\nfunction App() {\r\n  const currenciesData = useCurrencies();\r\n  const [result, setResult] = useState();\r\n  const [exchangeRate, setExchangeRate] = useState();\r\n\r\n  const calculateResult = (yourCurrency, finalCurrency, amount) => {\r\n    const startingRate = currenciesData.rates[yourCurrency];\r\n    const finalRate = currenciesData.rates[finalCurrency];\r\n    setResult({\r\n      sourceAmount: (+amount).toFixed(2),\r\n      targetAmount: ((amount / startingRate) * finalRate).toFixed(2),\r\n      yourCurrency,\r\n      finalCurrency,\r\n    });\r\n  };\r\n\r\n  const calculateRate = (yourCurrency, finalCurrency) => {\r\n    const startingRate = currenciesData.rates[yourCurrency];\r\n    const finalRate = currenciesData.rates[finalCurrency];\r\n    setExchangeRate({\r\n      calculateRate: ((1 / startingRate) * finalRate).toFixed(2),\r\n      yourCurrency,\r\n      finalCurrency,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Internetowy kantor\" />\r\n      <Section title=\"Wprowadź dane:\" additionalParagraph={<Clock />}>\r\n        <Form\r\n          currenciesData={currenciesData}\r\n          calculateResult={calculateResult}\r\n          calculateRate={calculateRate}\r\n        />\r\n      </Section>\r\n      <Section title=\"Wynik:\">\r\n        <Result\r\n          result={result}\r\n          exchangeRate={exchangeRate}\r\n          currenciesData={currenciesData}\r\n        />\r\n      </Section>\r\n      <Footer title=\"Kontakt:\" currenciesData={currenciesData} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrencies = () => {\r\n  const [currenciesData, setCurrenciesData] = useState();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://api.exchangeratesapi.io/latest?base=PLN\"\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        const getCurrencies = await response.json();\r\n        setCurrenciesData(getCurrencies);\r\n      } catch (error) {\r\n        console.error(\"Something bad happend!\", error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return currenciesData;\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}